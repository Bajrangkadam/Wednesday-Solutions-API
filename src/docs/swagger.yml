definitions:  
  Cab:
    title: Cab
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific cab
      driverName:
        type: string
        description: Name of the driver
      driverNumber:
        type: string
        description: Number of the driver
      lattitude:
        type: string
        description: lattitude of the driver location
      longitude:
        type: string
        description: longitude of the driver location
      isBooked:
        type: boolean
        description: cab bokk flag
      createdAt:
        type: string
        format: date-time
        description: Creation datetime
      updatedAt:
        type: string
        format: date-time
        description: Updation datetime
  bookCabResponse:
    title: bookCabResponse
    type: object
    properties:
      code:
        type: integer
        description: code of API response
      message:
        type: string
        description: message of API response
      cabID:
        type: integer
        description: Id number of Cab
      driverName:
        type: string
        description: Name of the driver
      driverNumber:
        type: string
        description: Number of the driver
      createdAt:
        type: string
        format: date-time
        description: Creation datetime
      updatedAt:
        type: string
        format: date-time
        description: Updation datetime
  LoginRequest:
    title: LoginRequest
    type: object
    properties:
      username:
        type: string
        required: true
        description: Username of login user
      password:
        type: string        
        required: true
        description: password of user(default password is 123)
  LoginResponse:
    title: LoginResponse
    type: object
    properties:
      id:
        type: integer
        description: Id of user
      username:
        type: string
        description: Username of login user
      name:
        type: string
        description: Name of login user
      token:
        type: string
        description: Token of login user
      createdAt:
        type: string
        format: date-time
        description: Creation datetime
      updatedAt:
        type: string
        format: date-time
        description: Updation datetime
  CabHistory:
    title: CabHistory
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific cab
      userid:
        type: integer
        description: User id of booked user
      source:
        type: string
        description: Source of the user
      destination:
        type: string
        description: Destination of the user
      lattitude:
        type: string
        description: lattitude of the driver location
      longitude:
        type: string
        description: longitude of the driver location
      color:
        type: string
        description: color of cab
      createdAt:
        type: string
        format: date-time
        description: Creation datetime
      updatedAt:
        type: string
        format: date-time
        description: Updation datetime
  CabBook:
    title: CabBook
    type: object
    properties:
      source:
        type: string
        required: true
        description: Pick up location of user
      destination:
        type: string
        required: true
        description: Drop location of user
      lattitude:
        type: integer
        required: true
        description: lattitude of the user
      longitude:
        type: integer
        required: true
        description: longitude of the user
      color:
        type: string
        description: color of the cab
  AccessTokenHeader:
    name: x-access-token
    in: header
    description: The x-access-token entity param is used to authentication of api.
    required: true
    x-is-map: false
    type: string
  AppNameHeader:
    name: appName
    in: header
    description: The appName entity param is used to authentication of api.
    required: true
    x-is-map: false
    type: string
  Error:
    title: Error
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  ServerError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: ServerError
  NotFoundError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: NotFoundError
  ValidationError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: ValidationError
      - properties:
          details:
            type: array
            items:
              title: FieldError
              type: object
              properties:
                message:
                  type: string
                param:
                  type: string

/login:
  post:
    summary: Login user using username & password
    description: Login user using username & password 
    produces:
      - application/json
    tags:
      - Login
    parameters:
      - name: LoginRequest
        description: POST params for LoginRequest
        in: body
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
    responses:
      201:
        description: Login Successfully
        schema:
          title: LoginResponse
          type: object
          $ref: '#/definitions/LoginResponse'
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

/cab:
  get:
    summary: List all available cabs
    description: Returns all near by cabs
    produces:
      - application/json
    tags:
      - Cab
    parameters:
      - $ref: '#/definitions/AccessTokenHeader'
      - $ref: '#/definitions/AppNameHeader'
    responses:
      200:
        description: An array of cabs
        schema:
          title: Cabs
          type: array
          items:
            $ref: '#/definitions/Cab'
/cab/bookhistory:
  get:
    summary: List all booked cabs
    description: List all booked cabs
    produces:
      - application/json
    tags:
      - Cab
    parameters:
      - $ref: '#/definitions/AccessTokenHeader'
      - $ref: '#/definitions/AppNameHeader'
    responses:
      200:
        description: Fetched all booked history
        schema:
          title: Cabs
          type: array
          items:
            $ref: '#/definitions/CabHistory'
/cab/book:
  post:
    summary: Cab book based on near location cab
    description: Cab book based on near location cab 
    produces:
      - application/json
    tags:
      - Cab
    parameters:
      - name: CabBook
        description: POST params for cab book
        in: body
        required: true
        schema:
          $ref: '#/definitions/CabBook'
      - $ref: '#/definitions/AccessTokenHeader'
      - $ref: '#/definitions/AppNameHeader'
    responses:
      201:
        description: cab booked
        schema:
          title: Cab
          type: object
          $ref: '#/definitions/bookCabResponse'
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'
